@inherits LayoutComponentBase
@using Blocktrust.CredentialWorkflow.Web.Services
@inject NavigationManager NavigationManager

<PageTitle>Blocktrust Credential Workflow Platform</PageTitle>

<div class="min-h-screen flex flex-col">
    <!-- Custom TopBar for Home Page -->
    <div class="flex flex-col lg:flex-row lg:items-center justify-between bg-slate-700 min-h-[4rem] px-4 lg:px-6 py-3 lg:py-0">
        <!-- Logo Section -->
        <div class="flex items-center justify-between">
            <LogoWithVersion />
            <div class="lg:hidden">
                <MobileMenuToggle OnToggle="HandleMobileMenuToggle" />
            </div>
        </div>

        <!-- Login Button - Mobile Responsive -->
        <div class="@(isMobileMenuVisible ? "flex" : "hidden") lg:flex flex-col lg:flex-row mt-4 lg:mt-0 lg:items-center space-y-4 lg:space-y-0 lg:space-x-8">
            <NavLink href="Account/Login" 
                    class="text-white no-underline font-light border rounded border-gray-700 hover:bg-slate-500 bg-slate-600 px-4 py-2 transition-colors text-center">
                Login
            </NavLink>
        </div>
    </div>

    <!-- Main Content -->
    <main class="flex-1 bg-gray-50">
        <article class="container mx-auto p-4 lg:p-6">
            @Body
        </article>
    </main>
    
    <!-- Standard Error UI -->
    <div id="blazor-error-ui" class="fixed bottom-0 left-0 right-0 bg-red-500 text-white hidden">
        <div class="container mx-auto px-4 py-3 flex flex-col lg:flex-row justify-between items-center">
            <span class="mb-2 lg:mb-0">An unhandled error has occurred.</span>
            <div class="flex space-x-4">
                <a href="" class="underline hover:text-gray-200 transition-colors">Reload</a>
                <a class="cursor-pointer hover:text-gray-200 transition-colors">🗙</a>
            </div>
        </div>
    </div>
</div>

@code {
    private bool isMobileMenuVisible;

    private void HandleMobileMenuToggle(bool isVisible)
    {
        isMobileMenuVisible = isVisible;
        StateHasChanged();
    }
}