@using Blocktrust.CredentialWorkflow.Web.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AppStateService AppStateService
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="flex items-center justify-between bg-slate-700 h-16 px-6">
    <!-- Logo and Company Name Section -->
    <div class="flex items-center space-x-4">
        <NavLink href="/" class="flex items-center space-x-4">
            <Logo/>
        </NavLink>
    </div>

    <!-- Navigation Links -->
    <div class="flex items-center space-x-8">
        <!-- Regular Nav Links -->
        <div class="flex items-center space-x-8">
            <NavLink href="/workflows" class="text-white hover:text-gray-300 transition-colors">
                Workflows
            </NavLink>
            <NavLink href="/logs" class="text-white hover:text-gray-300 transition-colors">
                Logs
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <!-- Tenant Dropdown for Authorized Users -->
                <div class="relative">
                    <button @onclick="ToggleDropdown"
                            class="px-4 py-2 bg-slate-600 text-white rounded-md hover:bg-slate-500 transition-colors flex items-center space-x-2">
                        @* <span>@context.User.Identity?.Name</span> *@
                        <span>Tenant</span>
                        <span class="transform transition-transform duration-200 @(showDropdown ? "rotate-180" : "")">
                            ▼
                        </span>
                    </button>

                    @if (showDropdown)
                    {
                        <div class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50">
                            <NavLink href="/Account/Manage"
                                    class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                Profile
                            </NavLink>
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken/>
                                <input type="hidden" name="ReturnUrl" value="@NavigationManager.Uri"/>
                                <button type="submit"
                                        class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    Logout
                                </button>
                            </form>
                        </div>
                    }
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="flex items-center space-x-3">
                    <NavLink href="Account/Register" 
                            class="text-white no-underline font-light border rounded border-gray-700 hover:bg-slate-500 bg-slate-600 px-4 py-2 transition-colors">
                        Register
                    </NavLink>
                    <NavLink href="Account/Login" 
                            class="text-white no-underline font-light border rounded border-gray-700 hover:bg-slate-500 bg-slate-600 px-4 py-2 transition-colors">
                        Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private bool showDropdown;
    
    private void ToggleDropdown()
    {
        showDropdown = !showDropdown;
    }
    
    protected override void OnInitialized()
    {
        AppStateService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppStateService.OnChange -= StateHasChanged;
    }
}