@using Microsoft.AspNetCore.Identity
@using Blocktrust.CredentialWorkflow.Core.Entities.Identity

@inject SignInManager<ApplicationUser> SignInManager
<div class="p-3">
    <div class="font-semibold mb-3">Account settings</div>
    <ul class="nav nav-pills flex-column">
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage" Match="NavLinkMatch.All">Profile</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/Email">Email</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/ChangePassword">Password</NavLink>
        </li>
    </ul>

    <div class="font-semibold mb-3 mt-6">Private Keys</div>
    <ul class="nav nav-pills flex-column">
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/IssuingKeys" Match="NavLinkMatch.All">Issuing Keys</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/PeerDids" Match="NavLinkMatch.All">Peer DIDs</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/DidRegistrar" Match="NavLinkMatch.All">DID Registrar</NavLink>
        </li>
    </ul>
</div>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }

}